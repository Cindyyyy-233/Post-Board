{"version":3,"sources":["logo.svg","lookup/component.js","tweets/button.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/component.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urltweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.cf4c7e3d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react'\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if(data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType = \"json\"\n    xhr.open(method, url)\n    const csrftoken = getCookie('csrftoken');\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    if (csrftoken) {\n      //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n    }\n    xhr.onload = function () {\n      if (xhr.status === 403) {\n        const detail = xhr.response.detail\n        //if (detail === \"Authentication credential were not provided.\") {\n          window.location.href = \"/login?showLoginRequired=true\"\n        //}\n      }\n        callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function(e) {\n      console.log(e)\n      callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send(jsonData)\n}\n","import React from 'react'\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const { tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleActionBackendEvent = (response, status) => {\n        if ((status === 200 || status === 201) && didPerformAction) {\n            didPerformAction(response, status)\n        }\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n        \n    }\n    const display = action.type === 'like' ? `${likes} ${action.display}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n  \n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetList(username, callback) {\n    let endpoint = \"/tweets\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}","import React, { useState } from 'react'\nimport {ActionBtn} from './button'\n\n\nexport function ParentTweet(props) {\n    const {tweet} = props\n    return tweet.parent ? <div className='row'>\n        <div className='col-11 mx-auto p-3 border rounded'>\n            <p className='mb-0 text-muted small'> Retweet </p>\n            <Tweet hideActions className={' '} tweet={tweet.parent} />\n        </div>\n    </div> : null\n}\n\nexport function Tweet(props) {\n    const {tweet, didRetweet, hideActions} = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    const path = window.location.pathname\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urltweetId = match ? match.groups.tweetid : -1\n    const isDetail = `${tweet.id}` === `${urltweetId}`\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n            setActionTweet(newActionTweet)\n        } else if (status === 201) {\n            if (didRetweet) {\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n        \n\n    return <div className={className}>\n        <div>\n            <p>{tweet.id} - {tweet.content}</p>\n            <ParentTweet tweet={tweet}/>           \n        </div>\n        <div className='btn btn-group'>\n            {(actionTweet && hideActions !== true) &&\n                <React.Fragment>\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"like\", display: 'Likes' }} />\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: 'Unlike' }} />\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: 'Retweet' }} />\n                </React.Fragment>}\n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}> View </button>}\n        </div>\n    </div>\n}","import React, { useEffect, useState } from 'react'\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    //setTweetsInit([...props.newTweets].concat(tweetsInit))\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setTweetsInit(response)\n                    setTweetsDidSet(true)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    return tweets.map((item, index) => {\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })\n}","import React from 'react'\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate (props) {\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    const handleBackendUpdate = (response, status) => {\n        if (status === 201) {\n            didTweet(response)\n        } else {\n            alert(\"An error occurred please try again\")\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        //backend api request\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n        <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'> Tweet </button>\n        </form>\n    </div>\n}","import React, {useEffect, useState } from 'react'\nimport {TweetsList} from './list'\nimport {apiTweetDetail} from './lookup'\nimport {ParentTweet, Tweet} from './detail'\nimport {TweetCreate} from './create'\n\nexport function TweetsComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n\n    const handleNewTweet = (newTweet) => {\n        //backend api response handler\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet) //add to the begining of the array\n        setNewTweets(tempNewTweets)\n    }\n\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className = 'col-12 mb-3'/>}\n        <TweetsList newTweets = {newTweets} {...props}/>\n    </div>\n}\n\nexport function TweetDetailComponent(props) {\n    const {tweetId} = props\n    console.log(tweetId)\n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setTweet(response)\n        } else {\n            alert(\"There was an error finding the tweet\")\n        }\n    }\n    useEffect(() => {\n        if (didLookup === false) {\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [tweetId, didLookup, setDidLookup])\n\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>);\n}\n\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container=> {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), \n    container);\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}